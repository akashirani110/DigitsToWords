Given that there was no upper limit set to the number, getting a number in a long or int form would have been a long and tedious if-else effort. I saw that the sequences of the words were repetitive, for example, One hundred and twenty thousand, two hundred and forty-five. Hence, I took the number to be a string and split it by “.” first to obtain dollar and cents values. Then I broke it into chunks of three starting from right hand side with the last chunk allowed 1- or 2-digit values as well i.e, 12345678 will break as [678,345, 12]. Then I evaluated each one of these chunks and converted them into words i.e., [six hundred and seventy-eight, three hundred and forty-five, twelve]. Now all that needs to be done is add suffix to all elements except the first one based on the position of the chunk in the list i.e., [six hundred and seventy-eight, three hundred and forty-five thousand, twelve million] and reverse this list of strings and join these into one final output. [twelve million three hundred and forty-five thousand six hundred and seventy-eight]. 